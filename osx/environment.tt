#!/usr/bin/env ruby
#
################################################################################
#                                                                              #
# File informations:                                                           #
# - Name:    osx/environment.tt                                                #
# - Summary: Startup script for setting the environment (based on              #
#            `env_vars.yml` and other system informations.                     #
# - Authors:                                                                   #
#   - Alessandro Molari <molari.alessandro@gmail.com> (alem0lars)              #
#                                                                              #
# Project informations:                                                        #
#   - Homepage:        https://github.com/alem0lars/configs                    #
#   - Getting started: see README.md in the project root folder                #
#                                                                              #
# License: Apache v2.0 (see below)                                             #
#                                                                              #
################################################################################
#                                                                              #
# Licensed to the Apache Software Foundation (ASF) under one more contributor  #
# license agreements.  See the NOTICE file distributed with this work for      #
# additional information regarding copyright ownership. The ASF licenses this  #
# file to you under the Apache License, Version 2.0 (the "License"); you may   #
# not use this file except in compliance with the License.                     #
# You may obtain a copy of the License at                                      #
#                                                                              #
#   http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT    #
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.             #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
#                                                                              #
################################################################################


# {{{ Requires.

require 'yaml'
require 'etc'

# }}}


# {{{ Utilities - Logging.

def log_info(msg)
  system("syslog -s -l info \"#{msg}\"")
end

def log_warn(msg)
  system("syslog -s -l warning \"#{msg}\"")
end

def log_error(msg, should_exit: true)
  system("syslog -s -l critical \"#{msg}\"")
  exit(-1) if should_exit
end

# }}}

# {{{ Utilities - System informations.

def username
  Etc.getpwnam(Etc.getlogin).gecos.split(/,/).first
end

# }}}

# {{{ Utilities - Applications.

def quit_app(app_name)
  system("osascript -e 'tell app \"#{app_name}\" to quit'")
end

# }}}

# {{{ Utilities - Environment variables.

def set_env_var(name, value)
  system("launchctl setenv \"#{name}\" \"#{value}\"")
end

def env_vars
  path = File.expand_path("~/.env_vars.yml")
  unless File.exist?(path) && !File.directory?(path)
    return log_error("Can't find environment variables file at `#{path}`.")
  end
  YAML.load(File.read(path))
end

def reset_env_var_path
  if File.executable?("/usr/libexec/path_helper")
    cmds = []
    cmds << "export PATH=\"\""
    cmds << "eval `/usr/libexec/path_helper -s`"
    cmds << "launchctl setenv PATH $PATH"
    system(cmds.join(" && "))
  end
end

# }}}


# {{{ Main

log_warn("START -> Set environment vars with `#{__FILE__}` for `#{username}`")

reset_env_var_path

env_vars.each { |name, value| set_env_var(name, value) }

quit_app("Dock")

log_warn("FINISH -> Set environment vars with `#{__FILE__}` for `#{username}`")

# }}}


# vim: set filetype=ruby :
