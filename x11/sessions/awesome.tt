#!/bin/sh
#
# {{{ ##########################################################################
#                                                                              #
# File informations:                                                           #
# - Name:    x11/sessions/awesome.tt                                           #
# - Summary: The Awesome session file.                                         #
# - Authors:                                                                   #
#   - Alessandro Molari <molari.alessandro@gmail.com> (alem1lars)              #
#                                                                              #
# Project informations:                                                        #
#   - Homepage:        https://github.com/alem0lars/configs                    #
#   - Getting started: see README.md in the project root folder                #
#                                                                              #
# License: Apache v2.0 (see below)                                             #
#                                                                              #
################################################################################
#                                                                              #
# Licensed to the Apache Software Foundation (ASF) under one more contributor  #
# license agreements.  See the NOTICE file distributed with this work for      #
# additional information regarding copyright ownership. The ASF licenses this  #
# file to you under the Apache License, Version 2.0 (the "License"); you may   #
# not use this file except in compliance with the License.                     #
# You may obtain a copy of the License at                                      #
#                                                                              #
#   http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT    #
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.             #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
#                                                                              #
# }}} ##########################################################################


# {{{ Setup logging.

# Redirect errors to a file in user's home directory if we can.
for errfile in "${HOME}/.awesome-errors" "${TMPDIR-/tmp}/awesome-${USER}" "/tmp/awesome-${USER}"
do
  if ( cp /dev/null "${errfile}" 2> /dev/null )
  then
    chmod 600 "$errfile"
    exec > "$errfile" 2>&1
    break
  fi
done

# }}}

# {{{ Load x11 configuration.

userresources=$HOME/.Xresources
usermodmap=$HOME/.Xmodmap
userxkbmap=$HOME/.Xkbmap

sysresources=/etc/X11/Xresources
sysmodmap=/etc/X11/Xmodmap
sysxkbmap=/etc/X11/Xkbmap

rh6sysresources=/etc/X11/xinit/Xresources
rh6sysmodmap=/etc/X11/xinit/Xmodmap

# Merge in defaults.
if [ -f "$rh6sysresources" ]; then
  xrdb -merge "$rh6sysresources"
fi

if [ -f "$sysresources" ]; then
  xrdb -merge "$sysresources"
fi

if [ -f "$userresources" ]; then
  xrdb -merge "$userresources"
fi

# Merge in keymaps.
if [ -f "$sysxkbmap" ]; then
  setxkbmap `cat "$sysxkbmap"`
  XKB_IN_USE=yes
fi

if [ -f "$userxkbmap" ]; then
  setxkbmap `cat "$userxkbmap"`
  XKB_IN_USE=yes
fi

# Eeek, this seems like too much magic here.
if [ -z "$XKB_IN_USE" -a ! -L /etc/X11/X ]; then
  if grep '^exec.*/Xsun' /etc/X11/X > /dev/null 2>&1 && [ -f /etc/X11/XF86Config ]; then
    xkbsymbols=`sed -n -e 's/^[     ]*XkbSymbols[   ]*"\(.*\)".*$/\1/p' /etc/X11/XF86Config /etc/X11/xorg.conf`
    if [ -n "$xkbsymbols" ]; then
      setxkbmap -symbols "$xkbsymbols"
      XKB_IN_USE=yes
    fi
  fi
fi

# xkb and xmodmap don't play nice together.
if [ -z "$XKB_IN_USE" ]; then
  if [ -f "$rh6sysmodmap" ]; then
    xmodmap "$rh6sysmodmap"
  fi

  if [ -f "$sysmodmap" ]; then
    xmodmap "$sysmodmap"
  fi

  if [ -f "$usermodmap" ]; then
    xmodmap "$usermodmap"
    fi
fi

unset XKB_IN_USE

# Run all system xinitrc shell scripts.
if [ -d /etc/X11/xinit/xinitrc.d ]; then
  for i in /etc/X11/xinit/xinitrc.d/* ; do
    if [ -x "$i" ]; then
      . "$i"
    fi
  done
fi

# }}}

<% if has_feature? 'downscale' %>
monitor=$(xrandr | grep -i edp | cut -d " " -f 1)
xrandr --newmode  "1440x900_60.00"  106.50  1440 1528 1672 1904  900 903 909 934 -hsync +vsync
xrandr --addmode ${monitor} 1440x900_60.00
xrandr --output ${monitor} --mode 1440x900_60.00
<% end %>

<% if get_var 'dpi' %>
xrandr --dpi <%= get_var! 'dpi' %>
<% end %>

xset r rate 300 30

setxkbmap -option ctrl:nocaps

<% if has_feature? 'urxvt' %>
urxvtd -o -f
<% end %>

<% if has_feature? 'pulseaudio' %>
start-pulseaudio-x11 &
<% end %>

<% if has_feature? 'autocutsel' %>
autocutsel -fork
<% end %>

if [[ -f ~/.screenlayout/default.sh ]]; then
  source ~/.screenlayout/default.sh
fi

<% if has_feature? 'copyq' %>
copyq &
<% elsif has_feature? 'parcellite' %>
parcellite &
<% end %>

if [ -x /usr/bin/gpg-agent ]; then
  eval "$(/usr/bin/gpg-agent --daemon)"
fi

if [ -x /usr/bin/ssh-agent ]; then
  eval "$(/usr/bin/ssh-agent -s)"
fi

exec /usr/bin/awesome


# vim: set filetype=zsh :
