# {{{ File header. #############################################################
#                                                                              #
# File informations:                                                           #
# - Name:    tmux/tmux.conf.tt                                                 #
# - Summary: The tmux configuration.                                           #
# - Authors:                                                                   #
#   - Alessandro Molari <molari.alessandro@gmail.com> (alem0lars)              #
#                                                                              #
# Project informations:                                                        #
# - Homepage:        https://github.com/alem0lars/configs                      #
# - Getting started: see README.md in the project root folder                  #
#                                                                              #
# License: Apache v2.0 (see below)                                             #
#                                                                              #
################################################################################
#                                                                              #
# Licensed to the Apache Software Foundation (ASF) under one more contributor  #
# license agreements.  See the NOTICE file distributed with this work for      #
# additional information regarding copyright ownership. The ASF licenses this  #
# file to you under the Apache License, Version 2.0 (the "License"); you may   #
# not use this file except in compliance with the License.                     #
# You may obtain a copy of the License at                                      #
#                                                                              #
#   http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT    #
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.             #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
#                                                                              #
# }}} ##########################################################################


# {{{ Variables.

TMUX_VERSION_MINOR="`tmux -V | cut -d '.' -f 2 | sed 's|[^0-9]||g'`"

# }}}

# {{{ Charset.

# Unicode support.
setw -g utf8        on
set  -g status-utf8 on

# }}}

# {{{ History.

# Set maximum history size.
set -g history-limit 10240

# }}}

# {{{ Windows.

# Aggressively resize the chosen window.  This means that tmux will resize the
# window to the size of the smallest session for which it is the current window,
# rather than the smallest session to which it is attached. The window may
# resize when the current window is changed on another sessions; this option is
# good for full-screen programs which support SIGWINCH and poor for interactive
# programs such as shells.
setw -g aggressive-resize on

# Start indexes from 1 instead of 0, for typing accessibility.
set -g base-index      1
set -g pane-base-index 1

# Directly expose pane titles.
set -g set-titles on

# }}}

# {{{ Activity.

# Monitor for activity in the window.
# Windows with activity are highlighted in the status line.
setw -g monitor-activity on
set  -g visual-activity  on

# Urgency hints.
set -g bell-action   any
set -g bell-on-alert on

# }}}

# {{{ Terminal.

# Set terminal type.
set -g default-terminal "screen-256color"

# }}}

# {{{ Keyboard.

# Set the time in milliseconds for which tmux waits after an escape is input to
# determine if it is part of a function or meta key sequences.
set -sg escape-time 256

# Allow multiple commands to be entered without pressing the prefix-key again in
# the specified time milliseconds.
set -g repeat-time 256

# }}}

# {{{ Mouse.

set -g mode-mouse          on
set -g mouse-utf8          on
set -g mouse-resize-pane   on
set -g mouse-select-pane   on
set -g mouse-select-window on

# }}}

# {{{ Configure hotkeys.

setw -g xterm-keys  on

# {{{ Vi-mode.

set -wg mode-keys   vi
set -g  status-keys vi

# }}}

# {{{ Prefix.

# Change prefix from <C-b> to <C-a>.
set -g prefix C-a
unbind-key C-b

# Nested prefix.
bind C-a send-prefix
bind a   send-prefix

# }}}

# {{{ History.

bind -n C-k clear-history

# }}}

# {{{ Reload.

# <Prefix><S-r>: force a reload of the config file.
bind r source <%= get_var!('tmux.config_file_path') %>\; display "Tmux configuration reloaded."

# }}}

# {{{ Copy & Paste.

# [Normal mode]y or <Enter>: Copy the selected text.
bind -t vi-copy 'y' copy-pipe "xclip -i -selection clipboard"
bind -t vi-copy 'enter' copy-pipe "xclip -i -selection clipboard"

# }}}

# {{{ Layouts.

# <Prefix><Space>: next layout.
bind 'space' next-layout

# }}}

# {{{ Windows.

# <Prefix>c: Create a new window.
if-shell "[[ $TMUX_VERSION_MINOR -ge 7 ]]" \
  'bind c new-window -c "#{pane_current_path}"' \
  'bind c new-window'

# <Prefix>w: Choose a window.
bind w choose-window

# <Prefix>W: Choose a window from the all of the windows (also in other
#            sessions).
if-shell "[[ $TMUX_VERSION_MINOR -ge 7 ]]" \
  'bind W choose-tree' \
  'bind W choose-session'

# <Prefix><Alt>w: Kill the window (asking confirmation).
bind M-w confirm kill-window
# <Prefix><Alt>W: Kill the window (without asking confirmation).
bind M-W kill-window

# }}}

# {{{ Sessions.

# <Prefix>C: Create a new session.
bind C command-prompt -p "new session:" "new-session -A -s %%"

# <Prefix>d: detach from the current session.
bind d detach

# <Prefix><Alt>s: Kill the session (asking confirmation).
bind M-s confirm kill-session
# <Prefix><Alt>S: Kill the session (without asking confirmation).
bind M-S kill-session

# }}}

# {{{ Panes.

bind J swap-pane -D
bind K swap-pane -U
bind H swap-pane -U
bind L swap-pane -D

bind C-j resize-pane -D 10
bind C-k resize-pane -U 10
bind C-h resize-pane -L 10
bind C-l resize-pane -R 10

# s: Split window horizontally creating a new lower pane.
if-shell "[[ $TMUX_VERSION_MINOR -ge 7 ]]" \
  'bind s split-window -v -p 33 -c "#{pane_current_path}"' \
  'bind s split-window -v -p 33'

# S: Split window horizontally creating a new upper pane.
if-shell "[[ $TMUX_VERSION_MINOR -ge 7 ]]" \
  'bind S split-window -v -p 33 -c "#{pane_current_path}"\; swap-pane -U' \
  'bind S split-window -v -p 33\; swap-pane -U'

# v: Split window vertically creating a new right pane.
if-shell "[[ $TMUX_VERSION_MINOR -ge 7 ]]" \
  'bind v split-window -h -p 33 -c "#{pane_current_path}"' \
  'bind v split-window -h -p 33'

# V: Split window vertically creating a new left pane.
if-shell "[[ $TMUX_VERSION_MINOR -ge 7 ]]" \
  'bind V split-window -h -p 33 -c "#{pane_current_path}"\; swap-pane -U' \
  'bind V split-window -h -p 33\; swap-pane -U'

# hjkl pane traversal.
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Fallback for weird situations.
bind Up select-pane -U
bind Down select-pane -D
bind Left select-pane -L
bind Right select-pane -R

# }}}

# }}}

# {{{ Colors.

set -g status 'on'
set -g status-utf8 'on'

set -g status-bg 'colour233'
set -g status-justify 'left'
set -g status-left-length '100'
set -g status-left-attr 'none'
set -g status-right-length '100'
set -g status-right-attr 'none'
set -g status-attr 'none'

setw -g window-status-fg 'colour240'
setw -g window-status-attr 'none'
setw -g window-status-activity-bg 'colour233'
setw -g window-status-activity-attr 'none'
setw -g window-status-activity-fg 'colour25'
if-shell "[[ $TMUX_VERSION_MINOR -ge 7 ]]" \
  'setw -g window-status-separator ""'
setw -g window-status-bg 'colour233'

set -g pane-border-fg 'colour236'
set -g pane-active-border-fg 'colour25'

set -g message-bg 'colour236'
set -g message-command-fg 'colour145'
set -g message-fg 'colour145'
set -g message-command-bg 'colour236'

# }}}

# {{{ Status.

set -g status-left '#[fg=colour195,bg=colour25,bold] #S #[fg=colour25,bg=colour233,nobold,nounderscore,noitalics]'
set -g status-right '#[fg=colour233,bg=colour233,nobold,nounderscore,noitalics]#[fg=colour240,bg=colour233] #(tmux-mem-cpu-load 2) '
setw -g window-status-format '#[fg=colour233,bg=colour233,nobold,nounderscore,noitalics]#[default] #I:#W #[fg=colour233,bg=colour233,nobold,nounderscore,noitalics]'
setw -g window-status-current-format '#[fg=colour233,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour145,bg=colour236] #I:#W #[fg=colour236,bg=colour233,nobold,nounderscore,noitalics]'

# }}}


# vim: set filetype=tmux :
