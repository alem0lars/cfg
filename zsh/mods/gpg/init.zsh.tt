#!/usr/bin/env zsh
#
# provide for an easier use of gpg by setting up gpg-agent
#

# return if requirements are not found
if (( ! $+commands[gpg-agent] )); then
  return 1
fi

# set the default paths to gpg-agent files
_gpg_agent_conf="${GNUPGHOME:-$HOME/.gnupg}/gpg-agent.conf"
_gpg_agent_env="${TMPDIR:-/tmp}/gpg-agent.env"

# start gpg-agent if not started
if [[ -z "$GPG_AGENT_INFO" && ! -S "${GNUPGHOME:-$HOME/.gnupg}/S.gpg-agent" ]]; then
  # export environment variables
  source "$_gpg_agent_env" 2> /dev/null
  # start gpg-agent if not started
  if ! ps -U "$USER" -o pid,ucomm | grep -q -- "${${${(s.:.)GPG_AGENT_INFO}[2]}:--1} gpg-agent"; then
    eval "$(gpg-agent --daemon | tee "$_gpg_agent_env")"
  fi
fi

# inform gpg-agent of the current tty for user prompts
export GPG_TTY="$(tty)"

# integrate with the ssh module
if grep 'enable-ssh-support' "$_gpg_agent_conf" &> /dev/null; then
  # load the ssh module for additional processing
  pmodload 'ssh'

  # updates the gpg-agent tty before every command since ssh does not set it
  function _gpg-agent-update-tty {
    gpg-connect-agent UPDATESTARTUPTTY /bye >/dev/null
  }
  add-zsh-hook preexec _gpg-agent-update-tty
fi

# clean up
unset _gpg_agent_{conf,env}
