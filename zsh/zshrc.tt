#!/usr/bin/env zsh
#
# {{{ File header. #############################################################
#                                                                              #
# File informations:                                                           #
# - Name:    zsh/zshrc.tt                                                      #
# - Summary: This file is sourced in interactive shells. It should contain     #
#            commands to set up aliases, functions, options, keybindings, etc. #
# - Authors:                                                                   #
#   - Alessandro Molari <molari.alessandro@gmail.com> (alem0lars)              #
#                                                                              #
# Project informations:                                                        #
#   - Homepage:        https://github.com/alem0lars/configs                    #
#   - Getting started: see README.md in the project root folder                #
#                                                                              #
# License: Apache v2.0 (see below)                                             #
#                                                                              #
################################################################################
#                                                                              #
# Licensed to the Apache Software Foundation (ASF) under one more contributor  #
# license agreements.  See the NOTICE file distributed with this work for      #
# additional information regarding copyright ownership. The ASF licenses this  #
# file to you under the Apache License, Version 2.0 (the "License"); you may   #
# not use this file except in compliance with the License.                     #
# You may obtain a copy of the License at                                      #
#                                                                              #
#   http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT    #
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.             #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
#                                                                              #
# }}} ##########################################################################


# {{{ Global configuration.

export ZSH_ROOT_DIR="<%= File.expand_path get_var!('zsh.custom_dir') %>"

export ZSH_PLUGINS_DIR="${ZSH_ROOT_DIR}/plugins"
export ZSH_PLUGINS_CONFIGS_DIR="${ZSH_PLUGINS_DIR}/configs"

export ZGEN_DIR="${ZSH_PLUGINS_DIR}/repos"
export ZGEN_INIT="${ZSH_PLUGINS_DIR}/init.zsh"

# }}}

# {{{ Zstyles for plugins.

# alem0lars/zsh-editor.
zstyle ':editor' dot-expansion 'yes'
zstyle ':editor' key-bindings '<%= has_feature?("vim") ? "vi" : "emacs" %>'

# }}}

# {{{ Load ZGen.

source "${ZSH_PLUGINS_DIR}/zgen/zgen.zsh"

# }}}

# {{{ Post-configuration for plugins.

# Configure zsh-syntax-highlighting.
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern root)

# Configure zsh-history-substring-search.
HISTORY_SUBSTRING_SEARCH_HIGHLIGHT_FOUND='bg=magenta,fg=white,bold'
HISTORY_SUBSTRING_SEARCH_HIGHLIGHT_NOT_FOUND='bg=red,fg=white,bold'
HISTORY_SUBSTRING_SEARCH_GLOBBING_FLAGS='i'
if [[ -n "${key_info}" ]]; then
  # Emacs
  bindkey -M emacs "$key_info[Control]P" history-substring-search-up
  bindkey -M emacs "$key_info[Control]N" history-substring-search-down
  # Vi
  bindkey -M vicmd "k" history-substring-search-up
  bindkey -M vicmd "j" history-substring-search-down
  # Emacs and Vi
  for keymap in 'emacs' 'viins'; do
    bindkey -M "$keymap" "$key_info[Up]" history-substring-search-up
    bindkey -M "$keymap" "$key_info[Down]" history-substring-search-down
  done
fi

# Configure zsh-autosuggestions.
zle-line-init() { # Enable autosuggestions automatically.
    zle autosuggest-start
}
zle -N zle-line-init
AUTOSUGGESTION_ACCEPT_RIGHT_ARROW=1

# }}}

# {{{ Plugins declaration.

# Check if there's no init script.
if ! zgen saved; then

  zgen load Tarrasch/zsh-functional # Functional-style functions.
  zgen load mafredri/zsh-async # Async functions.

  zgen load alem0lars/zsh-environment # Basic ZSH environment.
  zgen load alem0lars/zsh-editor # Input-line editing capabilities.
  zgen load alem0lars/zsh-history # History options.
  zgen load alem0lars/zsh-directory # Directory options.

  zgen load zsh-users/zsh-syntax-highlighting # Highlight words.
  zgen load zsh-users/zsh-history-substring-search # Search in substrings.

  zgen load zsh-users/zsh-completions # Additional completion definitions.
  zgen load alem0lars/zsh-complete # Completion behaviour.
  zgen load tarruda/zsh-autosuggestions # Automatic inline completion.

  zgen load rimraf/k # Tool alternative to `ls`.
  zgen load alem0lars/zsh-external-tools # Support for external tools.

  zgen load sindresorhus/pure # Load theme.

  # Save all to init script.
  zgen save
fi

# }}}


# vim: set filetype=zsh :
