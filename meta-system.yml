# {{{ File header. #############################################################
#                                                                              #
# File informations:                                                           #
# - Name:    meta-system.yml                                                   #
# - Summary: The system-level configuration metadata.                          #
# - Authors:                                                                   #
#   - Alessandro Molari <molari.alessandro@gmail.com> (alem0lars)              #
#                                                                              #
# Project informations:                                                        #
# - Homepage:        https://github.com/alem0lars/configs                      #
# - Getting started: see README.md in the project root folder                  #
#                                                                              #
# License: Apache v2.0 (see below)                                             #
#                                                                              #
################################################################################
#                                                                              #
# Licensed to the Apache Software Foundation (ASF) under one more contributor  #
# license agreements.  See the NOTICE file distributed with this work for      #
# additional information regarding copyright ownership. The ASF licenses this  #
# file to you under the Apache License, Version 2.0 (the "License"); you may   #
# not use this file except in compliance with the License.                     #
# You may obtain a copy of the License at                                      #
#                                                                              #
#   http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT    #
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.             #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
#                                                                              #
# }}} ##########################################################################

commands:
  - type: 'git_sync'
    repo: 'https://github.com/tarjoilija/zgen'
    dst:  '<%= get_var! "zsh.custom_dir" %>/plugins/zgen'
    only:
      features: ['zsh']
  - type: 'git_sync'
    repo: 'https://github.com/Shougo/neobundle.vim'
    dst:  '<%= get_var! "vim.bundle_dir" %>/neobundle.vim'
    only:
      features: ['vim']

elems:

  # {{{ CLI centric.

  - src:  'mutt/global_muttrc'
    dst:  '/etc/mutt/Muttrc'
    only:
      features: ['mutt']
  - src:  'mutt/theme'
    dst:  '/etc/mutt/theme'
    only:
      features: ['mutt']

  # }}}

  # {{{ Software specific.

  - src: 'deluge/(deluged)'
    dst: '/etc/conf.d/<1>'
    only:
      features: ['deluge']

  - src: 'conky/(.+)'
    dst: '/etc/conky/<1>'
    only:
      features: ['conky']

  - src:  'tmux/tmux.conf'
    dst:  '<%= get_var! "tmux.config_file_path" %>'
    only:
      features: ['tmux']
    notes: |
      The program 'xclip' should be installed in order to provide clipboard
      support to tmux.

  - src:  'zsh/(zshrc)'
    dst:  '<%= get_var! "zsh.zshrc_path" %>'
    only:
      features: ['zsh']
  - src:  'zsh/(zshenv)'
    dst:  '<%= get_var! "zsh.zshenv_path" %>'
    only:
      features: ['zsh']
  - src:  'zsh/(zlogin)'
    dst:  '<%= get_var! "zsh.zlogin_path" %>'
    only:
      features: ['zsh']
  - src:  'zsh/(zlogout)'
    dst:  '<%= get_var! "zsh.zlogout_path" %>'
    only:
      features: ['zsh']

  - src:  '^vim/vimrc$'
    dst:  '<%= get_var! "vim.entry_point" %>'
    only:
      features: ['vim']
      vars: ['vim.entry_point']

  - src:  '^vim/gvimrc$'
    dst:  '<%= get_var! "vim.gui_entry_point" %>'
    only:
      features: ['vim']
      vars: ['vim.gui_entry_point']

  # Other vim files (all except `.vimrc` and `.gvimrc`) should stay in the vim
  # custom directory.
  - src:  '^vim/((?!.*(?:vimrc|gvimrc)$).*)$'
    dst:  '<%= get_var! "vim.custom_dir" %>/<1>'
    only:
      features: ['vim']

  - src:  'grub/default_config'
    dst:  '/etc/default/grub'
    only:
      features: ['grub']

  - src: 'zathura/zathurarc'
    dst: '/etc/zathurarc'
    only:
      features: ['zathura']

  - src: 'alsa/alsasound'
    dst: '/etc/conf.d/alsasound'
    only:
      features: ['alsa']

  - src: 'dracut/dracut.conf'
    dst: '/etc/dracut.conf'
    only:
      features: ['dracut']

  - src: 'slim/slim.conf'
    dst: '/etc/slim.conf'
    only:
      features: ['slim']

  - src: 'lightdm/Xsession$'
    dst: '/etc/lightdm/Xsession'
    perms: '755'
    only:
      features: ['lightdm']

  - src:  '^lightdm/((?!.*Xsession$).*)$'
    dst: '/etc/lightdm/<1>'
    only:
      features: ['lightdm']

  - src: 'mplayer/(.+)'
    dst: '/etc/mplayer/<1>'
    only:
      features: ['mplayer']

  # }}}

  # {{{ Boot loaders.

  - src:  'refind/(.+)'
    # At the moment, install isn't meaningless in `rEFInd`, since symlinks
    # can't be followed when configuration is evaluated, since there is
    # no filesystem mounted. If install is performed, we want to be
    # really sure we don't overwrite `rEFInd` destination files, so just
    # set the destination to a temporary directory.
    dst:  '<%= get_var! "tmp_dir" %>/refind'
    only:
      features: ['refind']

  # }}}

  # {{{ GTK.

  - src:  'gtk/gtk2rc'
    dst:  '/etc/gtk-2.0/gtkrc'
    only:
      features: ['gtk']

  - src:  'gtk/gtk3settings.ini'
    dst:  '/etc/gtk-3.0/settings.ini'
    only:
      features: ['gtk']

  - src:  'gtk/vim_theme/(.+)'
    dst:  '/usr/share/themes/Vi/<1>'
    only:
      features: ['gtk_vim']

  # }}}

  # {{{ GNU/Linux.

  - src: 'multimonitor/<%= get_var!("hostname") %>\.json$'
    dst: '/etc/multimonitor.json'
    only:
      features: ['multimonitor']

  - src: 'linux/kernel_configs/<%= get_var! "kernel_config" %>\.config$'
    dst: '/usr/src/linux/.config'
    only:
      features: ['linux']
      vars:     ['kernel_config']

  - src: 'linux/(bootmisc)$'
    dst: '/etc/conf.d/<1>'
    only:
      features: ['linux']

  - src: 'linux/(hostname)$'
    dst: '/etc/conf.d/<1>'
    only:
      features: ['linux']

  - src:  'linux/(hwclock)$'
    dst:  '/etc/conf.d/<1>'
    only:
      features: ['linux']

  - src:  'linux/(keymaps)$'
    dst:  '/etc/conf.d/<1>'
    only:
      features: ['linux']

  - src:  'linux/(locale.conf)$'
    dst:  '/etc/<1>'
    only:
      features: ['linux']

  - src: 'linux/fstabs/fstab_julia'
    dst: '/etc/fstab'
    only:
      features: [['host_julia', 'gentoo']]

  # {{{ X11.

  - src: 'x11/xresources/main'
    dst: '/etc/X11/xinit/Xresources'
    only:
      features: ['x11']

  - src: 'x11/xresources/((?!.*main$).*)$'
    dst: '<%= get_var! "x11.xresources.custom_dir" %>/<1>'
    only:
      features: ['x11']

  - src: 'x11/(xorg\.conf\.d/[0-9]+-apple\.conf)$'
    dst: '/etc/X11/<1>'
    only:
      features: ['macbook']

  - src: 'x11/(xorg\.conf\.d/[0-9]+-wacom\.conf)$'
    dst: '/etc/X11/<1>'
    only:
      features: ['wacom']

  - src: 'x11/sessions/(awesome)$'
    dst: '/etc/X11/Sessions/<1>'
    perms: '755'
    only:
      features: [['x11', 'awesomewm']]

  - src: 'x11/sessions/(xmonad)$'
    dst: '/etc/X11/Sessions/<1>'
    perms: '755'
    only:
      features: [['x11', 'xmonad']]

  # }}}

  # {{{ Systemd

  - src: 'systemd/hostname'
    dst: '/etc/hostname'
    only:
      features: ['systemd']

  - src:  '^systemd/((?!.*hostname$).*)$'
    dst: '/etc/systemd/<1>'
    only:
      features: ['systemd']

  # }}}

  # {{{ Gentoo - Environment variables.

  - src: 'linux/gentoo/env/([0-9]*(?:.+[\W_])?xsession(?:[\W_].+)?)$'
    dst: '/etc/env.d/<1>'
    only:
      features: [['gentoo', 'x11']]

  - src: 'linux/gentoo/env/([0-9]*(?:.+[\W_])?hidpi(?:[\W_].+)?)$'
    dst: '/etc/env.d/<1>'
    only:
      features: [['gentoo', 'hidpi']]

  # }}}

  # {{{ Gentoo - Portage.

  - src:  '(portage/(?:modules|make\.conf|repos\.conf/.+|package\.license))$'
    dst:  '/etc/<1>'
    only:
      features: ['gentoo']

  - src:  '(portage/package\.(?:keywords|use|license|unmask)/(?!(?:.+[\W_])?julia(?:[\W_].+)?$).*)$'
    dst:  '/etc/<1>'
    only:
      features: ['gentoo']

  - src:  '(portage/package\.(?:keywords|use|license|unmask)/(?:.+[\W_])?julia(?:[\W_].+)?)$'
    dst:  '/etc/<1>'
    only:
      features: [['host_julia', 'gentoo']]

  - src:  'eix/(eix-sync.conf)'
    dst:  '/etc/<1>'
    only:
      features: ['gentoo']

  - src:  'eix/eixrc/(.+)'
    dst:  '/etc/eixrc/<1>'
    only:
      features: ['gentoo']

  - src:  'layman/(.+)'
    dst:  '/etc/layman/<1>'
    only:
      features: ['gentoo']

  - src:  'g-sorcery/(.+)'
    dst:  '/etc/eixrc/<1>'
    only:
      features: ['g-sorcery']

  # }}}

  - src: 'linux/gentoo/(modules-load\.d/virtualbox\.conf)$'
    dst: '/etc/<1>'
    only:
      features: [['gentoo', 'virtualbox', 'systemd']]

  - src: 'linux/udev/rules/([0-9]+-xhc_sleep\.rules)$'
    dst: '/etc/udev/rules.d/<1>'
    only:
      features: [['linux', 'macbook']]

  # }}}

  # {{{ OSX.

  - src:  'osx/env_vars/(setenv\.LIBRARY_PATH\.plist)$'
    dst:  '/Library/LaunchAgents/<1>'
    only:
      features: ['osx']

  - src:  'osx/env_vars/(setenv\.PATH\.plist)$'
    dst:  '/Library/LaunchAgents/<1>'
    only:
      features: ['osx']

  - src:  'osx/env_vars/(setenv\.EDITOR\.plist)$'
    dst:  '/Library/LaunchAgents/<1>'
    only:
      features: ['osx']

  - src:  'osx/env_vars/(setenv\.MANPATH\.plist)$'
    dst:  '/Library/LaunchAgents/<1>'
    only:
      features: ['osx']

  - src:  'osx/env_vars/(setenv\.HOMEBREW_CASK_OPTS\.plist)$'
    dst:  '/Library/LaunchAgents/<1>'
    only:
      features: [['osx', 'homebrew']]

  - src:  'osx/env_vars/(setenv\.RBENV_ROOT\.plist)$'
    dst:  '/Library/LaunchAgents/<1>'
    only:
      features: [['osx', 'rbenv']]

  - src:  'osx/env_vars/(setenv\.PYENV_ROOT\.plist)$'
    dst:  '/Library/LaunchAgents/<1>'
    only:
      features: [['osx', 'pyenv']]

  - src:  'osx/env_vars/(setenv\.PYTHONIOENCODING\.plist)$'
    dst:  '/Library/LaunchAgents/<1>'
    only:
      features: [['osx', 'python']]

  - src:  'osx/env_vars/(setenv\.JAVA_HOME\.plist)$'
    dst:  '/Library/LaunchAgents/<1>'
    only:
      features: [['osx', 'java']]

  - src:  'osx/env_vars/(setenv\.GROOVY_HOME\.plist)$'
    dst:  '/Library/LaunchAgents/<1>'
    only:
      features: [['osx', 'groovy']]

  - src:  'osx/env_vars/(setenv\.SBT_OPTS\.plist)$'
    dst:  '/Library/LaunchAgents/<1>'
    only:
      features: [['osx', 'sbt']]

  - src:  'osx/env_vars/(setenv\.MONO_GAC_PREFIX\.plist)$'
    dst:  '/Library/LaunchAgents/<1>'
    only:
      features: [['osx', 'mono']]

  - src:  'osx/env_vars/(setenv\.GOPATH\.plist)$'
    dst:  '/Library/LaunchAgents/<1>'
    only:
      features: [['osx', 'go']]

  - src:  'osx/env_vars/(setenv\.RUST_SRC_PATH\.plist)$'
    dst:  '/Library/LaunchAgents/<1>'
    only:
      features: [['osx', 'rust']]

 # }}}
