################################################################################
#                                                                              #
# File informations:                                                           #
# - Name:    meta.yml                                                          #
# - Summary: The configuration metadata, describing the contents and how they  #
#            should be handled.                                                #
# - Authors:                                                                   #
#   - Alessandro Molari <molari.alessandro@gmail.com> (alem0lars)              #
#                                                                              #
# Project informations:                                                        #
# - Homepage:        https://github.com/alem0lars/configs                      #
# - Getting started: see README.md in the project root folder                  #
#                                                                              #
# License: Apache v2.0 (see below)                                             #
#                                                                              #
################################################################################
#                                                                              #
# Licensed to the Apache Software Foundation (ASF) under one more contributor  #
# license agreements.  See the NOTICE file distributed with this work for      #
# additional information regarding copyright ownership. The ASF licenses this  #
# file to you under the Apache License, Version 2.0 (the "License"); you may   #
# not use this file except in compliance with the License.                     #
# You may obtain a copy of the License at                                      #
#                                                                              #
#   http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT    #
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.             #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
#                                                                              #
################################################################################


commands:
  - type: 'git_sync'
    repo: 'https://github.com/zsh-users/zsh-completions'
    dst:  '<%= get_var! "zsh.custom_dir" %>/mods/completion/external'
    only:
      features: ['zsh']
  - type: 'git_sync'
    repo: 'https://github.com/zsh-users/zsh-history-substring-search'
    dst:  '<%= get_var! "zsh.custom_dir" %>/mods/history_substring_search/external'
    only:
      features: ['zsh']
  - type: 'git_sync'
    repo: 'https://github.com/zsh-users/zsh-syntax-highlighting'
    dst:  '<%= get_var! "zsh.custom_dir" %>/mods/syntax_highlighting/external'
    only:
      features: ['zsh']
  - type: 'git_sync'
    repo: 'https://github.com/sindresorhus/pure'
    dst:  '<%= get_var! "zsh.custom_dir" %>/mods/prompt/externals/pure'
    only:
      features: ['zsh']
  - type: 'git_sync'
    repo: 'https://github.com/chriskempson/base16-shell.git'
    dst:  '<%= get_var! "zsh.custom_dir" %>/mods/base16/external'
    only:
      features: ['zsh']
  - type: 'git_sync'
    repo: 'https://github.com/Shougo/neobundle.vim'
    dst:  '<%= get_var! "vim.bundle_dir" %>/neobundle.vim'
    only:
      features: ['vim']
  - type: 'git_sync'
    repo: 'https://github.com/chriskempson/base16-xresources'
    dst:  '<%= get_var! "xorg.xresources.custom_dir" %>/colorschemes/base16'
    only:
      features: ['linux']
      vars: ['colorscheme']


elems:

  # commons {{{

  - src: 'git/gitconfig'
    dst: '~/.gitconfig'

  - src: 'svn/config'
    dst: '~/.subversion/config'

  # }}}

  # language specific {{{

  - src:  'cabal/config'
    dst:  '~/.cabal/config'
    only:
      features: ['haskell']

  - src:  'ruby/irbrc'
    dst:  '~/.irbrc'
    only:
      features: ['ruby']
    notes: |
      The following features will be enabled if their requirements are met:
        irb extensions    -> gem 'irbtools' & 'irbtools-more'
        clipboard support -> xclip

  - src:  'python/(ipython.+)'
    dst:  '~/.ipython/profile_default/<1>'
    only:
      features: ['python']

  # }}}

  # cli centric {{{

  - src:  'taskwarrior/taskrc'
    dst:  '~/.taskrc'
    only:
      features: ['cli_centric', 'taskwarrior']

  - src: 'cmus/(.+)'
    dst: '~/.cmus/<1>'
    only:
      features: ['cli_centric', 'cmus']

  - src:  'mutt/global_muttrc'
    dst:  '/etc/mutt/Muttrc'
    only:
      features: ['cli_centric', 'mutt']
  - src:  'mutt/theme'
    dst:  '/etc/mutt/theme'
    only:
      features: ['cli_centric', 'mutt']
  - src:  'mutt/user_muttrc'
    dst:  '~/.muttrc'
    only:
      features: ['cli_centric', 'mutt']
    notes: |
      Depending on user's configuration, additional programs maybe required.
      For example, if passwords are retrieved using 'lpass', then the
      lastpass command-line interface is required.

  - src:  'turses/(.+)'
    dst:  '~/.turses/<1>'
    only:
      features: ['cli_centric', 'turses']

  - src:  'weechat/(.+)'
    dst:  '~/.weechat/<1>'
    only:
      features: ['cli_centric', 'weechat']

  - src:  'canto/(conf)'
    dst:  '~/.canto-ng/<1>'
    only:
      features: ['cli_centric', 'canto']

  # }}}

  # specific {{{

  - src: 'xmonad/xmonad.hs'
    dst: '~/.xmonad/xmonad.hs'
    only:
      features: ['xmonad']

  - src: 'conky/(.+)'
    dst: '/etc/conky/<1>'
    only:
      features: ['conky']

  - src: 'parcellite/(.+)'
    dst: '~/.config/parcellite/<1>'
    only:
      features: ['parcellite']

  - src:  'tmux/tmux.conf'
    dst:  '<%= get_var! "tmux.config_file_path" %>'
    only:
      features: ['tmux']
    notes: |
      The program 'xclip' should be installed in order to provide clipboard
      support to tmux.

  - src:  'zsh/(zshrc)'
    dst:  '<%= get_var! "zsh.zshrc_path" %>'
    only:
      features: ['zsh']
  - src:  'zsh/(zshenv)'
    dst:  '<%= get_var! "zsh.zshenv_path" %>'
    only:
      features: ['zsh']
  - src:  'zsh/(zlogin)'
    dst:  '<%= get_var! "zsh.zlogin_path" %>'
    only:
      features: ['zsh']
  - src:  'zsh/(zlogout)'
    dst:  '<%= get_var! "zsh.zlogout_path" %>'
    only:
      features: ['zsh']
  - src:  '^zsh/((?!.*(?:zshrc|zshenv|zlogin|zlogout)$).*)$'
    dst:  '<%= get_var! "zsh.custom_dir" %>/<1>'
    only:
      features: ['zsh']

  - src:  '^vim/vimrc$'
    dst:  '<%= get_var! "vim.entry_point" %>'
    only:
      features: ['vim']
      vars: ['vim.entry_point']

  - src:  '^vim/gvimrc$'
    dst:  '<%= get_var! "vim.gui_entry_point" %>'
    only:
      features: ['vim']
      vars: ['vim.gui_entry_point']

  - src:  '^vim/((?!.*(?:vimrc|gvimrc)$).*)$'
    dst:  '<%= get_var! "vim.custom_dir" %>/<1>'
    only:
      features: ['vim']

  - src: 'atom/(.+)'
    dst: '<%= ENV["HOME"] %>/.atom/<1>'
    only:
      features: ['atom']

  - src:  'grub/default_config'
    dst:  '/etc/default/grub'
    only:
      features: ['grub']

  - src:  'vimperator/vimperatorrc'
    dst:  '~/.vimperatorrc'
    only:
      features: ['firefox_vim']
  - src:  'vimperator/colors/amdarkness'
    dst:  '~/.vimperator/colors/amdarkness.vimp'
    only:
      features: ['firefox_vim']

  - src: 'zim/(.+)'
    dst: '~/.config/zim/<1>'
    only:
      features: ['zim']
    notes: |
      The enabled plugins have the following dependencies:
        diagram_editor     -> graphviz
        equation_editor    -> latex, dvipng
        gnu_r_ploteditor   -> gnu r
        gnuplot_ploteditor -> gnuplot
        screenshot         -> scrot
        linkmap            -> graphviz
        sourceview         -> gtksourceview2
        versioncontrol     -> (optional) bzr, hg, git

  - src:  'zathura/zathurarc'
    dst:  '/etc/zathurarc'
    only:
      features: ['zathura']

  - src:  'alsa/alsasound'
    dst:  '/etc/conf.d/alsasound'
    only:
      features: ['alsa']

  - src:  'dracut/dracut.conf'
    dst:  '/etc/dracut.conf'
    only:
      features: ['dracut']

  - src:  'slim/slim.conf'
    dst:  '/etc/slim.conf'
    only:
      features: ['slim']

  - src:  'virtualbox/systemd_kernel_modules.conf'
    dst:  '/etc/modules-load.d/virtualbox.conf'
    only:
      features: ['virtualbox_systemd']

  - src:  'mplayer/(.+)'
    dst:  '/etc/mplayer/<1>'
    only:
      features: ['mplayer']

  # }}}

  # gtk {{{

  - src:  'gtk/bookmarks'
    dst:  '~/.gtk-bookmarks'
    only:
      features: ['gtk']

  - src:  'gtk/gtk2rc'
    dst:  '/etc/gtk-2.0/gtkrc'
    only:
      features: ['gtk']

  - src:  'gtk/gtk3settings.ini'
    dst:  '/etc/gtk-3.0/settings.ini'
    only:
      features: ['gtk']

  - src:  'gtk/vim_theme/(.+)'
    dst:  '/usr/share/themes/Vi/<1>'
    only:
      features: ['gtk_vim']

  # }}}

  # linux (& distros) {{{

  - src: 'linux/kernel_configs/<%= get_var! "kernel_config" %>.config'
    dst: '/usr/src/linux/.config'
    only:
      features: ['linux']
      vars:     ['kernel_config']

  - src: 'xorg/xresources/main'
    dst: '/etc/X11/xinit/Xresources'
    only:
      features: ['linux']
  - src: 'xorg/xresources/((?!.*main$).*)$'
    dst: '<%= get_var! "xorg.xresources.custom_dir" %>/<1>'
    only:
      features: ['linux']

  - src: 'xorg/sessions/xmonad'
    dst: '/etc/X11/Sessions/xmonad'
    only:
      features: ['xorg_xmonad']

  - src: 'linux/bootmisc'
    dst: '/etc/conf.d/bootmisc'
    only:
      features: ['linux']

  - src: 'linux/hostname'
    dst: '/etc/conf.d/hostname'
    only:
      features: ['linux']

  - src:  'linux/hwclock'
    dst:  '/etc/conf.d/hwclock'
    only:
      features: ['linux']

  - src:  'linux/keymaps'
    dst:  '/etc/conf.d/keymaps'
    only:
      features: ['linux']

  - src:  'linux/locale.conf'
    dst:  '/etc/locale.conf'
    only:
      features: ['linux']

  - src:  'portage/(.+)'
    dst:  '/etc/portage/<1>'
    only:
      features: ['gentoo']

  - src:  'eix/(eix-sync.conf)'
    dst:  '/etc/<1>'
    only:
      features: ['gentoo']

  - src:  'eix/eixrc/(.+)'
    dst:  '/etc/eixrc/<1>'
    only:
      features: ['gentoo']

  - src:  'layman/(.+)'
    dst:  '/etc/layman/<1>'
    only:
      features: ['gentoo']

  - src:  'g-sorcery/(.+)'
    dst:  '/etc/eixrc/<1>'
    only:
      features: ['g-sorcery']

  - src: 'systemd/hostname'
    dst: '/etc/hostname'
    only:
      features: ['systemd']

  - src:  '^systemd/((?!.*hostname$).*)$'
    dst: '/etc/systemd/<1>'
    only:
      features: ['systemd']

  # }}}

  # OSX {{{

  - src:  'osx/env_vars/(setenv\.LIBRARY_PATH\.plist)$'
    dst:  '~/Library/LaunchAgents/<1>'
    only:
      features: ['osx']

  - src:  'osx/env_vars/(setenv\.PATH\.plist)$'
    dst:  '~/Library/LaunchAgents/<1>'
    only:
      features: ['osx']

  - src:  'osx/env_vars/(setenv\.EDITOR\.plist)$'
    dst:  '~/Library/LaunchAgents/<1>'
    only:
      features: ['osx']

  - src:  'osx/env_vars/(setenv\.MANPATH\.plist)$'
    dst:  '~/Library/LaunchAgents/<1>'
    only:
      features: ['osx']

  - src:  'osx/env_vars/(setenv\.HOMEBREW_CASK_OPTS\.plist)$'
    dst:  '~/Library/LaunchAgents/<1>'
    only:
      features: [['osx', 'homebrew']]

  - src:  'osx/env_vars/(setenv\.RBENV_ROOT\.plist)$'
    dst:  '~/Library/LaunchAgents/<1>'
    only:
      features: [['osx', 'rbenv']]

  - src:  'osx/env_vars/(setenv\.PYENV_ROOT\.plist)$'
    dst:  '~/Library/LaunchAgents/<1>'
    only:
      features: [['osx', 'pyenv']]

  - src:  'osx/env_vars/(setenv\.PYTHONIOENCODING\.plist)$'
    dst:  '~/Library/LaunchAgents/<1>'
    only:
      features: [['osx', 'python']]

  - src:  'osx/env_vars/(setenv\.JAVA_HOME\.plist)$'
    dst:  '~/Library/LaunchAgents/<1>'
    only:
      features: [['osx', 'java']]

  - src:  'osx/env_vars/(setenv\.GROOVY_HOME\.plist)$'
    dst:  '~/Library/LaunchAgents/<1>'
    only:
      features: [['osx', 'groovy']]

  - src:  'osx/env_vars/(setenv\.SBT_OPTS\.plist)$'
    dst:  '~/Library/LaunchAgents/<1>'
    only:
      features: [['osx', 'sbt']]

  - src:  'osx/env_vars/(setenv\.MONO_GAC_PREFIX\.plist)$'
    dst:  '~/Library/LaunchAgents/<1>'
    only:
      features: [['osx', 'mono']]

  - src:  'osx/env_vars/(setenv\.GOPATH\.plist)$'
    dst:  '~/Library/LaunchAgents/<1>'
    only:
      features: [['osx', 'go']]

  - src:  'osx/env_vars/(setenv\.RUST_SRC_PATH\.plist)$'
    dst:  '~/Library/LaunchAgents/<1>'
    only:
      features: [['osx', 'rust']]

 # }}}
