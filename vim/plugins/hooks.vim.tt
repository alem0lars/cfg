" {{{ ##########################################################################
"                                                                              #
" File informations:                                                           #
" - Name:    vim/plugins/hooks.vim.tt                                          #
" - Summary: Define hooks for vim plugins.                                     #
" - Authors:                                                                   #
"   - Alessandro Molari <molari.alessandro@gmail.com> (alem0lars)              #
"                                                                              #
" Project informations:                                                        #
"   - Homepage:        https://github.com/alem0lars/configs                    #
"   - Getting started: see README.md in the project root folder                #
"                                                                              #
" License: Apache v2.0 (see below)                                             #
"                                                                              #
"###############################################################################
"                                                                              #
" Licensed to the Apache Software Foundation (ASF) under one more contributor  #
" license agreements.  See the NOTICE file distributed with this work for      #
" additional information regarding copyright ownership. The ASF licenses this  #
" file to you under the Apache License, Version 2.0 (the "License"); you may   #
" not use this file except in compliance with the License.                     #
" You may obtain a copy of the License at                                      #
"                                                                              #
"   http://www.apache.org/licenses/LICENSE-2.0                                 #
"                                                                              #
" Unless required by applicable law or agreed to in writing, software          #
" distributed under the License is distributed on an "AS IS" BASIS, WITHOUT    #
" WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.             #
" See the License for the specific language governing permissions and          #
" limitations under the License.                                               #
"                                                                              #
" }}} ##########################################################################


function! RC_Plugins_Hooks_Define(paths)
  let l:plugins = {
        \   'vim-airline': 'Airline',
        \   'jellybeans.vim': 'Colorscheme',
        \   'vim-smartinput-endwise': 'SmartinputEndwise',
        \   'vim-bbye': 'Bbye',
        \   'vim-choosewin': 'ChooseWin',
        \   'clang_complete': 'ClangComplete',
        \   'vim-css3-syntax': 'CSS3Syntax',
        \   'echodoc.vim': 'EchoDoc',
        \   'emmet-vim': 'Emmet',
        \   'neco-ghc': 'NecoGHC',
        \   'vim-indent-guides': 'IndentGuides',
        \   'investigate.vim': 'Investigate',
        \   'junkfile.vim': 'Junkfile',
        \   'vim-multiple-cursors': 'MultipleCursors',
        \   'scss-syntax.vim': 'SCSSSyntax',
        \   'vimshell.vim': 'Vimshell',
        \   'vimproc.vim': 'Vimproc',
        \   'vimfiler.vim': 'Vimfiler',
        \   'vim-easy-align': 'EasyAlign',
        \   'undotree': 'UndoTree',
        \   'tagbar': 'Tagbar',
        \   'vim-signature': 'Signature',
        \   'unite.vim': 'Unite',
        \   'jedi-vim': 'Jedi',
        \   'vim-ruby': 'Ruby',
        \   'neocomplete': 'NeoComplete',
        \   'neosnippet': 'NeoSnippet',
        \   'tern_for_vim': 'Tern',
        \ }

  for [l:plugin_name, l:hook_name] in items(l:plugins)
    call s:RC_Plugins_Hook_Define(l:plugin_name, l:hook_name, a:paths)
  endfor
endfunction

" Define a plugin hook, associating a plugin with an existing hook.
function! s:RC_Plugins_Hook_Define(plugin_name, hook_name, paths)
  if neobundle#tap(a:plugin_name)
    let l:func_name = 'Plugins_Hooks_' . a:hook_name . '_OnLoad'
    let l:file_name = 'plugins/hooks/' . a:hook_name
    echo 'Plugin: ' . a:plugin_name . ' Hook: ' . a:hook_name
    call RC_LoadFF([l:file_name, l:func_name], a:paths)
    call neobundle#untap()
  endif
endfunction


" vim: set filetype=vim :
